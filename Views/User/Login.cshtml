@model LoginViewModel
@inject ClassHomedbContext _context
@{
    var conf = _context.Configs.FirstOrDefault(x => x.Estado == Estado.Ativado);
    var shadow = "box-shadow: 0px 1px 8px grey  ;";
    
    var returnUrl = "";
    ViewBag.Subtitulo = "Login";
    if (Context.Request.Query.ContainsKey("returnUrl"))
    {
        returnUrl = Context.Request.Query["returnUrl"].ToString();
    }
}

<div asp-validation-summary="ModelOnly" class="validation-summary text-danger mb-3"></div>
<partial name="_MensagemPartial" />
<div class="container col-6 p-5 mt-5" style="border-radius: 7%; @shadow; ">
    <form asp-action="Login" class="row">
        <h3 class="@conf.TitleText">Login</h3>
        <input type="hidden" name="ReturnUrl" id="ReturnUrl" value="@returnUrl">
        <div class="form-group mb-3">
            <label asp-for="@Model.User" class="@conf.TitleText"></label><br>
            <input asp-for="@Model.User" class="form-control" autofocus autocomplete="off">
            <span asp-validation-for="@Model.User" class="text-danger"></span>
        </div>
        <div class="w-100"></div>
        <div class="form-group mb-3">
            <label asp-for="@Model.Senha" class="@conf.TitleText"></label><br>
            <input asp-for="@Model.Senha" class="form-control">
            <span asp-validation-for="@Model.Senha" class="text-danger"></span>
        </div>
        <div class="w-100"></div>


        <div class="form-group">
            <div class="form-check">
                <input asp-for="@Model.Lembrar" class="form-check-input border">
                <label asp-for="@Model.Lembrar" class="form-check-label @conf.TitleText"></label><br>
                <span asp-validation-for="@Model.Lembrar" class="text-danger"></span>
            </div>
        </div>
        <div class="mt-3 text-center">
            <div class="mt-3">
                <button class="@conf.BTNin w-25" type="submit">Entrar</button>
            </div>
        </div>
    </form>
      
</div>