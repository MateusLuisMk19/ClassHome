@model TurmaModel
@inject ClassHomedbContext _context
@inject UserManager<UserModel> _userManager
@{
    var conf = _context.Configs.FirstOrDefault(x => x.Estado == Estado.Ativado);

    if (Context.Request.RouteValues.ContainsKey("id"))
        ViewBag.Subtitulo = "Editar Turma";
    else
        ViewBag.Subtitulo = "Criar Turma";

    var usuarioLog = await _userManager.GetUserAsync(Context.User);

    var PCriador = _context.Useres.FirstOrDefault(p => p.Id == usuarioLog.Id);

}

<header class="d-flex justify-content-between align-items-center mt-4 mb-3">
    <div>
        <h4>@ViewBag.Subtitulo</h4>
    </div>
</header>

<form asp-action="Criar" asp-route-idCriador="@Model.CriadorId" class="row">
    <input type="hidden" asp-for="@Model.TurmaId">
    <div class="form-group col-sm-8 col-lg-3">
        <div class="form-group col-3 visually-hidden">
            <label asp-for="@Model.CriadorId">Nome do Curso</label><br>
            <input asp-for="@Model.CriadorId" value="@PCriador.Id" class="form-control">
            <span asp-validation-for="@Model.CriadorId" class="text-danger"></span>
        </div>

        <label asp-for="@Model.NomeCurso">Nome do Curso</label><br>
        <input asp-for="@Model.NomeCurso" class="form-control">
        <span asp-validation-for="@Model.NomeCurso" class="text-danger"></span>

        <label asp-for="@Model.Local" class="mt-2">Localização</label><br>
        <input asp-for="@Model.Local" class="form-control">
        <span asp-validation-for="@Model.Local" class="text-danger"></span>

        <label asp-for="@Model.Descricao" class="mt-2">Descrição</label><br>
        <textarea asp-for="@Model.Descricao" class="form-control"></textarea>
        <span asp-validation-for="@Model.Descricao" class="text-danger"></span>
    </div>
    <div class="mt-3">
        <a asp-action="Index" class="@conf.BTNoff">Cancelar</a>
        <button class="@conf.BTNin" type="submit">Salvar</button>
    </div>
</form>